{"name":"Git-bash-prompt","tagline":"Bash prompt for giving detail information about status of current git repository.","body":"git-bash-prompt\r\n===============\r\n\r\nBash prompt for giving detail information about status of current git repository. <br>\r\nScript extends PS1 variable preserving user's settings.\r\n\r\nDescription\r\n===============\r\n\r\nScript distinguishes two states:\r\n\r\n  * clean repository (no changes found): ({branch} ✔)\r\n  * repository where changes are found:  ({branch},↑ {nr},↓ {nr},✚ {nr},● {nr},✖ {nr},? {nr},⚑ {nr})\r\n  \r\nwhere:\r\n\r\n  * {branch}: name of the current branch\r\n  * ↑: local branch is ahead of origin branch\r\n  * ↓: local branch is behind origin branch\r\n  * ✚: added files\r\n  * ●: modified or renamed files\r\n  * ✖: removed files\r\n  * ?: untracked files\r\n  * ⚑: number of stashed changes\r\n  * {nr}: number of changes\r\n\r\nScript displays only information about found changes thus empy statuses are skipped ({nr}=0). \r\n\r\n\r\nSamples\r\n===============\r\n\r\n * michal@wrona:~/git-bash-prompt(master ✔)$\r\n * michal@wrona:~/git-bash-prompt(feature-branch,↓ 1, ✚ 3, ● 8, ✖ 2)$\r\n * michal@wrona:~/git-bash-prompt(other-branch, ⚑ 1)$\r\n\r\n\r\nInstallation\r\n===============\r\n\r\n1) git clone {repository} <br>\r\n2) cd {repository} <br>\r\n3) $source install.sh <br>\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}